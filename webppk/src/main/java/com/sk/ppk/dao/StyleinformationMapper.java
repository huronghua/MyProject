package com.sk.ppk.dao;

import java.util.List;
import java.util.Map;

import com.sk.ppk.model.Styleinformation;
import com.sk.ppk.model.User;

public interface StyleinformationMapper {

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table styleinformation
	 * @mbggenerated  Thu May 05 17:05:26 CST 2016
	 */
	int deleteByPrimaryKey(Integer id);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table styleinformation
	 * @mbggenerated  Thu May 05 17:05:26 CST 2016
	 */
	int insert(Styleinformation record);
	
	int insertStyle(Styleinformation record);
	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table styleinformation
	 * @mbggenerated  Thu May 05 17:05:26 CST 2016
	 */
	int insertSelective(Styleinformation record);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table styleinformation
	 * @mbggenerated  Thu May 05 17:05:26 CST 2016
	 */
	Styleinformation selectByPrimaryKey(Integer id);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table styleinformation
	 * @mbggenerated  Thu May 05 17:05:26 CST 2016
	 */
	int updateByPrimaryKeySelective(Styleinformation record);
	
	void updateSelectiveWithoutPath(Styleinformation styleinformation);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table styleinformation
	 * @mbggenerated  Thu May 05 17:05:26 CST 2016
	 */
	int updateByPrimaryKey(Styleinformation record);
	
	int selectCount(Map pagemap)throws Exception;
	
	/**���м�¼ȡ��
	 * @return
	 * @throws Exception
	 */
	public List<Styleinformation> selectAllstyleinfo(Map pagemap);
	
	public String selectstylecontent(Map pagemap);
	
	/**样式列表取得
	 * @return
	 * @throws Exception
	 */
	public List<Styleinformation> selectAllstylelist();
	
	/**根据键值查询
	 * @return
	 * @throws Exception
	 */
	public Styleinformation selectByPrimaryKey(int id)throws Exception;
	
	/**删除数据
	 * @return
	 * @throws Exception
	 */
	public void deleteByPrimaryKey(int id)throws Exception;
	
	/**删除所有数据
	 * @return
	 * @throws Exception
	 */
	public void deleteAllStyle()throws Exception;
}